####################
# syntax
####################
[[plugins]]
repo = 'JavaScript-syntax'

[[plugins]]
repo = 'typescript-vim'

[[plugins]]
repo = 'statianzo/vim-jade'

#[[plugins]]
#repo = 'tpope/vim-pathogen'

[[plugins]]
repo = 'stephpy/vim-yaml'

[[plugins]]
repo = 'scrooloose/syntastic'
hook_add = '''
let g:syntastic_check_on_open=0 "ファイルを開いたときはチェックしない
let g:syntastic_check_on_save=1 "保存時にはチェック
let g:syntastic_auto_loc_list=1 "エラーがあったら自動でロケーションリストを開く
let g:syntastic_loc_list_height=6 "エラー表示ウィンドウの高さ
set statusline+=%#warningmsg# "エラーメッセージの書式
"set statusline+=%{SyntasticStatuslineFlag()}
set statusline+=%*
let g:syntastic_javascript_checker = 'jshint' "jshintを使う
let g:syntastic_mode_map = {
      \ 'mode': 'active',
      \ 'active_filetypes': ['ruby', 'javascript'],
      \ 'passive_filetypes': []
      \ }
"エラー表示マークを変更
let g:syntastic_enable_signs=1
let g:syntastic_error_symbol='✗'
let g:syntastic_warning_symbol='⚠'
'''

####################
# template
####################
#repo = 'thinca/vim-template'
#" テンプレート中に含まれる特定文字列を置き換える
#autocmd MyAutoCmd User plugin-template-loaded call s:template_keywords()
#function! s:template_keywords()
#  silent! %s/<+DATE+>/\=strftime('%Y-%m-%d')/g
#  silent! %s/<+FILENAME+>/\=expand('%:r')/g
#endfunction
#" テンプレート中に含まれる'<+CURSOR+>'にカーソルを移動
#autocmd MyAutoCmd User plugin-template-loaded
#      \   if search('<+CURSOR+>')
#      \ |   silent! execute 'normal! "_da>'
#      \ | endif




####################
# git
####################
[[plugins]]
repo = "tpope/vim-fugitive"

####################
# text整形
####################
[[plugins]]
repo = 'tpope/vim-surround'
[[plugins]]
repo = 'vim-scripts/Align'
[[plugins]]
repo = 'vim-scripts/YankRing.vim'

[[plugins]]
repo = 'mattn/emmet-vim'

####################
# indent
####################
#[[plugins]]
#repo =  "nathanaelkane/vim-indent-guides"
#hook_post_source = '''
#let s:hooks = neobundle#get_hooks("vim-indent-guides")
#function! s:hooks.on_source(bundle)
#  let g:indent_guides_guide_size = 1
#  let g:indent_guides_start_level = 1
#  let g:indent_guides_space_guides = 1
#
#  "let g:indent_guides_auto_colors = 0
#  "autocmd VimEnter,Colorscheme * :hi IndentGuidesOdd  guibg=red ctermbg=3
#  "autocmd VimEnter,Colorscheme * :hi IndentGuidesEven guibg=green ctermbg=4
#  "IndentGuidesEnable
#endfunction
#'''

#"javascript インデント
[[plugins]]
repo = 'pangloss/vim-javascript'


####################
# statusline
####################
[[plugins]]
repo = 'bling/vim-airline'

####################
# markdown
####################
[[plugins]]
repo = 'tpope/vim-markdown'
[[plugins]]
repo = 'tyru/open-browser.vim'
[[plugins]]
repo = 'thinca/vim-quickrun'
hook_add = '''
let g:quickrun_config = {}
let g:quickrun_config['markdown'] = {
      \   'command': 'rdiscount',
      \   'outputter': 'browser'
      \ }
nnoremap <Leader>r :QuickRun<CR>
'''
